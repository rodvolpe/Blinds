<?php
/**
 * @file
 * Exclude Node Title
 *
 * @author Gabriel Ungureanu
 * gabriel.ungreanu@ag-prime.com
 */

/**
 * Implements hook_permission().
 */ 
function exclude_node_title_permission() {
  return array(
    'administer exclude node title' => array(
      'title' => t('Administer exclude node title'),
    ),
    'exclude any node title' => array(
      'title' => t('Exclude any node title'),
    ),
    'exclude own node title' => array(
      'title' => t('Exclude own node title'),
    ),
    'use exclude node title' => array(
      'title' => t('Use exclude node title')
    ),
  );
}

/**
 * Implements hook_menu().
 */
function exclude_node_title_menu() {
  $items = array();
  $items['admin/config/content/exclude_node_title'] = array(
    'title' => t('Exclude Node Title'),
    'description' => t('Exclude Node Title from display'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('exclude_node_title_admin_settings'),
    'access arguments' => array('administer exclude node title'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'exclude_node_title.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_preprocess_page().
 */
function exclude_node_title_preprocess_page(&$vars) {
  if (arg(0) == 'node' && is_numeric(arg(1)) && user_access('use exclude node title')) {
    if (in_array(arg(1), variable_get('exclude_node_title_nid_list', array()))) {
      // remove title on a per node id basis
      $vars['title'] = '';
    }
    else {
      // remove title on a per node type basis
      if (isset($vars['node']) && is_object($vars['node'])) {
        $node_type = $vars['node']->type;
      }
      elseif ( is_numeric(arg(1)) ) {
        $node = node_load(arg(1));
        $node_type = $node->type;
        unset($node); // memory cleanup
      }
      $exclude_node_title_content_type = variable_get('exclude_node_title_content_type_values', array());
      if (!empty($exclude_node_title_content_type) && !empty($exclude_node_title_content_type[$node_type])) {
        $vars['title'] = '';
      }
      unset($exclude_node_title_content_type, $node_type); // memory cleanup
    }
  }
}

/**
 * Implements hook_node_view()
 */ 
function exclude_node_title_node_view($node, $view_mode) {
  if (variable_get('exclude_node_title_remove_title', 0) == 1 && user_access('use exclude node title')) {
    if (in_array($node->nid, variable_get('exclude_node_title_nid_list', array()))) {
      $node->title = '';
    }
    else {
      static $exclude_node_title_content_type; // perform static caching of variable
      if (!isset($exclude_node_title_content_type)) {
        $exclude_node_title_content_type = variable_get('exclude_node_title_content_type_values', array());
      }
      if ($exclude_node_title_content_type[$node->type]) {
        $node->title = '';
      }
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function exclude_node_title_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['type']) && isset($form['#node']) && $form['type']['#value'] . '_node_form' == $form_id) {
    if (!user_access('exclude any node title')) {
      global $user;
      if (!user_access('exclude own node title') ||
              ( user_access('exclude own node title') && strcmp($form['#node']->name, $user->name) ) ) {
        return FALSE;
      }
    }
    if (isset($form['field_tags'])) {
      $form['field_tags']['#weight']+=1;
    } 
    $weight = $form['title']['#weight']+1;
    $form['exclude_node_title'] = array(
      '#type' => 'checkbox',
      '#title' => t('Exclude title from display'),
      '#required' => FALSE,
      '#default_value' => (!empty($form['nid']['#value']) ? in_array($form['nid']['#value'], variable_get('exclude_node_title_nid_list', array())) : FALSE ),
      '#weight' => $weight,
    );
    $form['#submit'][] = 'exclude_node_title_node_edit_form_submit';
  }
}

/**
 * Implements hook_form_submit().
 */
function exclude_node_title_node_edit_form_submit($form, &$form_state) {
  if (isset($form_state['values']['exclude_node_title']) && isset($form_state['values']['nid'])) {
    $exclude_list = variable_get('exclude_node_title_nid_list', array());
    $is_excluded = array_search($form_state['values']['nid'], $exclude_list);
    if ($form_state['values']['exclude_node_title'] == 1 && $is_excluded === FALSE) {
      $exclude_list[] = $form_state['values']['nid'];
      variable_set('exclude_node_title_nid_list', $exclude_list);
      return;
    }
    elseif ($form_state['values']['exclude_node_title'] == 0 && $is_excluded !== FALSE) {
      unset($exclude_list[$is_excluded]);
      variable_set('exclude_node_title_nid_list', $exclude_list);
      return;
    }
  }
}
